/* =========================================================
 * ====                   WARNING                        ===
 * =========================================================
 * The code in this tab has been generated from the GUI form
 * designer and care should be taken when editing this file.
 * Only add/edit code inside the event handlers i.e. only
 * use lines between the matching comment tags. e.g.

 void myBtnEvents(GButton button) { //_CODE_:button1:12356:
     // It is safe to enter your event code here  
 } //_CODE_:button1:12356:
 
 * Do not rename this tab!
 * =========================================================
 */

public void button1_click1(GButton source, GEvent event) { //_CODE_:button1:211023:
  println("button1 - GButton >> GEvent." + event + " @ " + millis());
  window1.setVisible(true);
} //_CODE_:button1:211023:

public void button4_click1(GButton source, GEvent event) { //_CODE_:button4:886627:
  println("button4 - GButton >> GEvent." + event + " @ " + millis());
  if (bit.connect()) {
    //slet tasks
    bit.execute("DELETE FROM Tasks");

    //slet knapper
    for (int i = removeButtons.size()-1; i >= 0; i--) {
      removeButtons.get(i).dispose();
    }
    
    //slet pauser
    for (int i = breaks.size()-1; i >= 0; i--) {
      breaks.remove(breaks.get(i));
    }
    
    getTasks();
  }
  bit.close();
} //_CODE_:button4:886627:

synchronized public void win_draw1(PApplet appc, GWinData data) { //_CODE_:window1:417619:
  appc.background(200);
} //_CODE_:window1:417619:

public void textfield1_change1(GTextField source, GEvent event) { //_CODE_:textfield1:489195:
  println("textfield1 - GTextField >> GEvent." + event + " @ " + millis());
} //_CODE_:textfield1:489195:

public void button2_click1(GButton source, GEvent event) { //_CODE_:button2:425020:
  println("button2 - GButton >> GEvent." + event + " @ " + millis());
  closeWindow();
} //_CODE_:button2:425020:

public void button3_click1(GButton source, GEvent event) { //_CODE_:button3:836926:
  println("button3 - GButton >> GEvent." + event + " @ " + millis());

  //hvis der bliver oprettet en task uden fejl
  if (createTask()) {
    getTasks();
    closeWindow();
  } else label4.setText("Check om navn og tidspunkt er korrekt");
} //_CODE_:button3:836926:

public void dropList1_click1(GDropList source, GEvent event) { //_CODE_:dropList1:425632:
  println("dropList3 - GDropList >> GEvent." + event + " @ " + millis());
} //_CODE_:dropList1:425632:

public void dropList2_click1(GDropList source, GEvent event) { //_CODE_:dropList2:972917:
  println("dropList4 - GDropList >> GEvent." + event + " @ " + millis());
} //_CODE_:dropList2:972917:



// Create all the GUI controls. 
// autogenerated do not edit
public void createGUI(){
  G4P.messagesEnabled(false);
  G4P.setGlobalColorScheme(GCScheme.BLUE_SCHEME);
  G4P.setMouseOverEnabled(false);
  surface.setTitle("P.O.O.P.");
  button1 = new GButton(this, 500, 820, 70, 60);
  button1.setText("+");
  button1.setLocalColorScheme(GCScheme.GREEN_SCHEME);
  button1.addEventHandler(this, "button1_click1");
  label1 = new GLabel(this, 10, 10, 230, 40);
  label1.setText("My label");
  label1.setLocalColorScheme(GCScheme.SCHEME_15);
  label1.setOpaque(false);
  label2 = new GLabel(this, 240, 10, 110, 40);
  label2.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  label2.setText("My label");
  label2.setLocalColorScheme(GCScheme.SCHEME_15);
  label2.setOpaque(false);
  label3 = new GLabel(this, 440, 10, 140, 40);
  label3.setTextAlign(GAlign.RIGHT, GAlign.MIDDLE);
  label3.setText("My label");
  label3.setLocalColorScheme(GCScheme.SCHEME_15);
  label3.setOpaque(false);
  button4 = new GButton(this, 30, 830, 80, 40);
  button4.setText("Slet alle tasks");
  button4.setLocalColorScheme(GCScheme.RED_SCHEME);
  button4.addEventHandler(this, "button4_click1");
  window1 = GWindow.getWindow(this, "Ny Task", 20, 80, 400, 300, JAVA2D);
  window1.noLoop();
  window1.setActionOnClose(G4P.KEEP_OPEN);
  window1.addDrawHandler(this, "win_draw1");
  textfield1 = new GTextField(window1, 20, 20, 360, 30, G4P.SCROLLBARS_NONE);
  textfield1.setPromptText("Navn");
  textfield1.setOpaque(true);
  textfield1.addEventHandler(this, "textfield1_change1");
  button2 = new GButton(window1, 270, 250, 50, 40);
  button2.setText("✖");
  button2.setLocalColorScheme(GCScheme.RED_SCHEME);
  button2.addEventHandler(this, "button2_click1");
  button3 = new GButton(window1, 340, 250, 50, 40);
  button3.setText("✔");
  button3.setLocalColorScheme(GCScheme.GREEN_SCHEME);
  button3.addEventHandler(this, "button3_click1");
  dropList1 = new GDropList(window1, 20, 70, 110, 224, 6, 25);
  dropList1.setItems(loadStrings("list_425632"), 0);
  dropList1.addEventHandler(this, "dropList1_click1");
  dropList2 = new GDropList(window1, 150, 70, 110, 224, 6, 25);
  dropList2.setItems(loadStrings("list_972917"), 0);
  dropList2.addEventHandler(this, "dropList2_click1");
  label4 = new GLabel(window1, 250, 200, 140, 36);
  label4.setTextAlign(GAlign.RIGHT, GAlign.MIDDLE);
  label4.setLocalColorScheme(GCScheme.RED_SCHEME);
  label4.setOpaque(false);
  window1.loop();
}

// Variable declarations 
// autogenerated do not edit
GButton button1; 
GLabel label1; 
GLabel label2; 
GLabel label3; 
GButton button4; 
GWindow window1;
GTextField textfield1; 
GButton button2; 
GButton button3; 
GDropList dropList1; 
GDropList dropList2; 
GLabel label4; 
